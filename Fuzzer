#!/opt/homebrew/bin/python3

from lib2to3.pgen2.tokenize import generate_tokens
from ssl import Options
import usb, time, random, binascii
import dfu

HOST2DEVICE = 0x21

DFU_DETACH = 0
DFU_DNLOAD = 1
DFU_UPLOAD = 2
DFU_GETSTATUS = 3
DFU_CLRSTATUS = 4
DFU_GETSTATE = 5
DFU_ABORT = 6

iterations = 10

def log(message):
    with open('log.txt', 'a') as f:
        f.write(f'\n{message}')
        f.close()

def controlTransfer(device, bmRequestType, bRequest, wValue, wIndex, data_or_wLength, timeout):
    log(f'controlTransfer(bmRequestType: {bmRequestType}, bRequest: {bRequest}, wValue: {wValue}, wIndex: {wIndex}, data_or_wLength: {data_or_wLength}, timeout: {timeout})')
    try:
        device.ctrl_transfer(bmRequestType, bRequest, wValue, wIndex, data_or_wLength, timeout)
        log('Success')
        return 0
    except usb.core.USBError as e:
        log("Control transfer ERROR: %d, %d, %r" % (bmRequestType, bRequest, e))
        return 1

def generateData():
    num = random.randint(1, 1000)
    return random.randbytes(num)

def generateRequestType():
    return random.randint(0, 100000)
    #return random.randint(0, 255)

def generateIndex():
    return random.randint(0,5)

def main():
    device = dfu.acquire_device()
    print("\nGot device: %s" % device.serial_number)

    time.sleep(0.5)

    controlTransfer(device, HOST2DEVICE, DFU_DNLOAD, 0, 0, 0x40, 5)
    

    print("Beginning fuzzing...")
    time.sleep(3)

    count = 1
    errorCount = 0

    requestType = 0

    for _ in range(iterations):
        data = generateData()
        log(f"\nRequest {count}")
        ret = controlTransfer(device, generateRequestType(), DFU_DNLOAD, 0, 0, data, 5)
        if ret == 1:
            errorCount += 1
        time.sleep(0.5)
        count += 1
        requestType += 1

    print(f"Done fuzzing with {errorCount} errors")

    dfu.usb_reset(device)
    dfu.release_device(device)


if __name__ == '__main__':
    with open('log.txt', 'w') as f:
        # output date and time to file
        f.write(time.strftime("LOG START: %Y-%m-%d %H:%M:%S", time.localtime()))
        f.close()
    print("\n\n")
    print(" =====================================")
    print("(                                     )")
    print("(       DFU Fuzzer by alfiecg24       )")
    print("(                                     )")
    print(" =====================================")
    with open('log.txt', 'a') as f:
        f.write(f'\nUsing bmRequestType: {hex(HOST2DEVICE)}\n')
        f.close()
    iterations = int(input("\n\nEnter the number of requests to be sent: "))
    main()

    